year <- sapply(strsplit(date, split="/"), "[", 3)
date <- collision.data$INCDTTM
time <- sapply(strsplit(date, split=" "), "[", 2)
time.of.day <- sapply(strsplit(date, split=" "), "[", 3)
date <- sapply(strsplit(date, split=" "), "[", 1)
year <- sapply(strsplit(date, split="/"), "[", 3)
collision.data$INATTENTIONIND[collision.data$INATTENTIONIND == "N"]
collision.data$INATTENTIONIND[collision.data$INATTENTIONIND == "Y"]
collision.data$INATTENTIONIND[collision.data$INATTENTIONIND == "N"]
runApp()
hour <- sapply(strsplit(date, split=":"), "[", 1)
hour
time
hour <- sapply(strsplit(time, split=":"), "[", 1)
hour
collision.data <- read.csv("./SDOT_Collisions.csv", stringsAsFactors = FALSE)
collision.data[collision.data==""] <- NA
collision.data$INATTENTIONIND[is.na(collision.data$INATTENTIONIND)] <- "N"
collision.data <- na.omit(collision.data)
collision.data <- read.csv("./SDOT_Collisions.csv", stringsAsFactors = FALSE)
collision.data[collision.data==""] <- NA
collision.data$INATTENTIONIND[is.na(collision.data$INATTENTIONIND)] <- "N"
View(collision.data)
collision.data <- mutate(collision.data, "Latitude" = lat, "Longitude" = lng, "Year" = year, "Date" = date) %>%
select(ADDRTYPE, COLLISIONTYPE, DISTANCE, INATTENTIONIND, INCDTTM, INJURIES, JUNCTIONTYPE,
LIGHTCOND, LOCATION, PERSONCOUNT, ROADCOND, SDOT_COLDESC, SEVERITYDESC, ST_COLDESC,
VEHCOUNT, WEATHER, INCDTTM, Shape) #Latitude, Longitude, Year, Date)
collision.data <- read.csv("./SDOT_Collisions.csv", stringsAsFactors = FALSE)
collision.data[collision.data==""] <- NA
collision.data$INATTENTIONIND[is.na(collision.data$INATTENTIONIND)] <- "N"
collision.data <- #mutate(collision.data, "Latitude" = lat, "Longitude" = lng, "Year" = year, "Date" = date) %>%
select(collision.data, ADDRTYPE, COLLISIONTYPE, DISTANCE, INATTENTIONIND, INCDTTM, INJURIES, JUNCTIONTYPE,
LIGHTCOND, LOCATION, PERSONCOUNT, ROADCOND, SDOT_COLDESC, SEVERITYDESC, ST_COLDESC,
VEHCOUNT, WEATHER, INCDTTM, Shape) #Latitude, Longitude, Year, Date)
coordinates <- collision.data$Shape
lat <- sapply(strsplit(coordinates, split=", "), "[", 1)
lng <- sapply(strsplit(coordinates, split=", "), "[", 2)
lat <- gsub("\\(", "", lat)
lng <- gsub(")", "", lng)
lat <- signif(as.numeric(lat), 8)
lng <- signif(as.numeric(lng), 8)
date <- collision.data$INCDTTM
time <- sapply(strsplit(date, split=" "), "[", 2)
hour <- sapply(strsplit(time, split=":"), "[", 1)
time.of.day <- sapply(strsplit(date, split=" "), "[", 3)
date <- sapply(strsplit(date, split=" "), "[", 1)
year <- sapply(strsplit(date, split="/"), "[", 3)
collision.data <- mutate(collision.data, "Latitude" = lat, "Longitude" = lng, "Year" = year, "Date" = date,
"Time" = time, "Hour" = hour, "Time_Of_Day" = time.of.day)
View(collision.data)
collision.data <- na.omit(collision.data)
View(collision.data)
collision.data <- mutate(collision.data, "Latitude" = lat, "Longitude" = lng, "YEAR" = year, "DATE" = date,
"TIME" = time, "HOUR" = hour, "TIME_OF_DAY" = time.of.day)
collision.data <- read.csv("./SDOT_Collisions.csv", stringsAsFactors = FALSE)
collision.data[collision.data==""] <- NA
collision.data$INATTENTIONIND[is.na(collision.data$INATTENTIONIND)] <- "N"
collision.data <- select(collision.data, ADDRTYPE, COLLISIONTYPE, DISTANCE, INATTENTIONIND, INCDTTM, INJURIES,
JUNCTIONTYPE, LIGHTCOND, LOCATION, PERSONCOUNT, ROADCOND, SDOT_COLDESC, SEVERITYDESC,
ST_COLDESC, VEHCOUNT, WEATHER, INCDTTM, Shape)
collision.data <- mutate(collision.data, "Latitude" = lat, "Longitude" = lng, "YEAR" = year, "DATE" = date,
"TIME" = time, "HOUR" = hour, "TIME_OF_DAY" = time.of.day)
collision.data <- na.omit(collision.data)
time.of.day <- collision.data$TIME_OF_DAY
hour <- collision.data$HOUR
minute <- sapply(strsplit(collision$TIME, split":", "[", 2))
minute <- sapply(strsplit(collision$TIME, split"\:", "[", 2))
minute <- sapply(strsplit(collision$TIME, split=":", "[", 2))
minute <- sapply(strsplit(collision.data$TIME, split=":"), "[", 2)
evening <- filter(collision.data, TIME_OF_DAY == "PM") %>% select(TIME)
View(evening)
time.of.day <- collision.data$TIME_OF_DAY
hour <- collision.data$HOUR
time <- data.frame(time.of.day, hour)
View(time)
a <- function() {
if(time$time.of.day == "PM") {
time$time.of.day <- time.of.day + 12
}
}
a
View(time)
time <- within(time, hour[time.of.day == "PM"] <- hour + 12)
View(time)
time.of.day <- collision.data$TIME_OF_DAY
hour <- collision.data$HOUR
time <- data.frame(time.of.day, hour)
time <- within(time, hour[time.of.day == "PM"] <- hour + 12)
time.of.day <- collision.data$TIME_OF_DAY
hour <- collision.data$HOUR
time <- data.frame(time.of.day, hour)
time <- data.frame(time.of.day, as.integer(hour), stringsAsFactors = FALSE)
time <- within(time, hour[time.of.day == "PM"] <- hour + 12)
View(time)
time <- within(time, hour[time.of.day == "PM"] <- 12)
View(time)
time.of.day <- collision.data$TIME_OF_DAY
hour <- collision.data$HOUR
time <- data.frame(time.of.day, as.integer(hour), stringsAsFactors = FALSE)
time <- within(time, hour[time.of.day == "PM"] + 12)
time.of.day <- collision.data$TIME_OF_DAY
hour <- collision.data$HOUR
time <- data.frame(time.of.day, as.integer(hour), stringsAsFactors = FALSE)
time <- within(time, hour[time.of.day == "PM"] <- hour + 12)
time <- within(time, hour[time.of.day == "PM"] <- hour[time.of.day == "PM"] + 12)
hour[time.of.day == "PM"]
hour[time.of.day == "PM"] + 12
time.of.day <- collision.data$TIME_OF_DAY
hour <- collision.data$HOUR
time <- data.frame(time.of.day, as.numeric(hour), stringsAsFactors = FALSE)
time <- within(time, hour[time.of.day == "PM"] <- hour[time.of.day == "PM"] + 12)
hour[time.of.day == "PM"] + 12
time.of.day <- collision.data$TIME_OF_DAY
hour <- collision.data$HOUR
time <- data.frame(time.of.day, as.numeric(hour), stringsAsFactors = FALSE)
time.of.day <- collision.data$TIME_OF_DAY
hour <- collision.data$HOUR
time <- data.frame(time.of.day, ~as.numeric(hour), stringsAsFactors = FALSE)
time.of.day <- collision.data$TIME_OF_DAY
hour <- as.numeric(collision.data$HOUR)
time <- data.frame(time.of.day, hour, stringsAsFactors = FALSE)
time <- within(time, hour[time.of.day == "PM"] <- hour[time.of.day == "PM"] + 12)
View(time)
hour <- time$hour
time <- paste0(hour, ":", minute)
time.of.day <- collision.data$TIME_OF_DAY
hour <- as.numeric(collision.data$HOUR)
time <- data.frame(time.of.day, hour, stringsAsFactors = FALSE)
time <- within(time, hour[time.of.day == "PM"] <- hour + 12)
time.of.day <- collision.data$TIME_OF_DAY
hour <- as.numeric(collision.data$HOUR)
time <- data.frame(time.of.day, hour, stringsAsFactors = FALSE)
time <- within(time, hour[time.of.day == "PM"] <- hour[time.of.day == "PM"] + 12)
hour <- time$hour
minute <- sapply(strsplit(collision.data$TIME, split=":"), "[", 2)
time <- paste0(hour, ":", minute)
collision.data <- mutate("TIME" = time, "HOUR" = hour, "MINUTE" = minute)
collision.data <- mutate(collision.data, "TIME" = time, "HOUR" = hour, "MINUTE" = minute)
View(collision.data)
collision.data <- read.csv("./SDOT_Collisions.csv", stringsAsFactors = FALSE)
collision.data <- read.csv("./SDOT_Collisions.csv", stringsAsFactors = FALSE)
collision.data[collision.data==""] <- NA
collision.data$INATTENTIONIND[is.na(collision.data$INATTENTIONIND)] <- "N"
coordinates <- collision.data$Shape
lat <- sapply(strsplit(coordinates, split=", "), "[", 1)
lng <- sapply(strsplit(coordinates, split=", "), "[", 2)
lat <- gsub("\\(", "", lat)
lng <- gsub(")", "", lng)
lat <- signif(as.numeric(lat), 8)
lng <- signif(as.numeric(lng), 8)
date <- collision.data$INCDTTM
time <- sapply(strsplit(date, split=" "), "[", 2)
hour <- sapply(strsplit(time, split=":"), "[", 1)
time.of.day <- sapply(strsplit(date, split=" "), "[", 3)
date <- sapply(strsplit(date, split=" "), "[", 1)
year <- sapply(strsplit(date, split="/"), "[", 3)
collision.data <- mutate(collision.data, "Latitude" = lat, "Longitude" = lng, "YEAR" = year, "DATE" = date,
"TIME" = time, "HOUR" = hour, "TIME_OF_DAY" = time.of.day)
collision.data <- na.omit(collision.data)
time.of.day <- collision.data$TIME_OF_DAY
hour <- as.numeric(collision.data$HOUR)
time <- data.frame(time.of.day, hour, stringsAsFactors = FALSE)
time <- within(time, hour[time.of.day == "PM"] <- hour[time.of.day == "PM"] + 12)
hour <- time$hour
minute <- sapply(strsplit(collision.data$TIME, split=":"), "[", 2)
time <- paste0(hour, ":", minute)
collision.data <- mutate(collision.data, "TIME" = time, "HOUR" = hour, "MINUTE" = minute) %>%
select(COLLISIONTYPE, FATALITIES, INATTENTIONIND, INJURIES, LIGHTCOND, LOCATION, PERSONCOUNT,
ROADCOND, SDOT_COLDESC, SEVERITYCODE, SEVERITYDESC, ST_COLDESC, UNDERINFLUENCE,
VEHCOUNT, WEATHER, Latitude, Longitude, DATE, YEAR, TIME, HOUR, MINUTE)
options(digits=16)
collision.data <- mutate(collision.data, "TIME" = time, "HOUR" = hour, "MINUTE" = minute) %>%
select(COLLISIONTYPE, FATALITIES, INATTENTIONIND, INJURIES, LIGHTCOND, LOCATION, PERSONCOUNT,
ROADCOND, SDOT_COLDESC, SEVERITYCODE, SEVERITYDESC, ST_COLDESC, UNDERINF,
VEHCOUNT, WEATHER, Latitude, Longitude, DATE, YEAR, TIME, HOUR, MINUTE)
View(collision.data)
collision.data <- read.csv("./SDOT_Collisions.csv", stringsAsFactors = FALSE)
collision.data[collision.data==""] <- NA
collision.data$INATTENTIONIND[is.na(collision.data$INATTENTIONIND)] <- "N"
coordinates <- collision.data$Shape
lat <- sapply(strsplit(coordinates, split=", "), "[", 1)
lng <- sapply(strsplit(coordinates, split=", "), "[", 2)
lat <- gsub("\\(", "", lat)
lng <- gsub(")", "", lng)
lat <- signif(as.numeric(lat), 8)
lng <- signif(as.numeric(lng), 8)
date <- collision.data$INCDTTM
time <- sapply(strsplit(date, split=" "), "[", 2)
hour <- sapply(strsplit(time, split=":"), "[", 1)
time.of.day <- sapply(strsplit(date, split=" "), "[", 3)
date <- sapply(strsplit(date, split=" "), "[", 1)
year <- sapply(strsplit(date, split="/"), "[", 3)
collision.data <- mutate(collision.data, "Latitude" = lat, "Longitude" = lng, "YEAR" = year, "DATE" = date,
"TIME" = time, "HOUR" = hour, "TIME_OF_DAY" = time.of.day)
collision.data <- na.omit(collision.data)
time.of.day <- collision.data$TIME_OF_DAY
hour <- as.numeric(collision.data$HOUR)
time <- data.frame(time.of.day, hour, stringsAsFactors = FALSE)
time <- within(time, hour[time.of.day == "PM"] <- hour[time.of.day == "PM"] + 12)
hour <- time$hour
minute <- sapply(strsplit(collision.data$TIME, split=":"), "[", 2)
time <- paste0(hour, ":", minute)
collision.data <- mutate(collision.data, "TIME" = time, "HOUR" = hour, "MINUTE" = minute) %>%
select(COLLISIONTYPE, FATALITIES, INATTENTIONIND, INJURIES, LIGHTCOND, LOCATION, PERSONCOUNT,
ROADCOND, SDOT_COLDESC, SEVERITYCODE, SEVERITYDESC, ST_COLDESC, UNDERINFL,
VEHCOUNT, WEATHER, Latitude, Longitude, DATE, YEAR, TIME, HOUR, MINUTE)
collision.data <- read.csv("./SDOT_Collisions.csv", stringsAsFactors = FALSE)
collision.data[collision.data==""] <- NA
collision.data$INATTENTIONIND[is.na(collision.data$INATTENTIONIND)] <- "N"
coordinates <- collision.data$Shape
lat <- sapply(strsplit(coordinates, split=", "), "[", 1)
lng <- sapply(strsplit(coordinates, split=", "), "[", 2)
lat <- gsub("\\(", "", lat)
lng <- gsub(")", "", lng)
lat <- signif(as.numeric(lat), 8)
lng <- signif(as.numeric(lng), 8)
date <- collision.data$INCDTTM
time <- sapply(strsplit(date, split=" "), "[", 2)
hour <- sapply(strsplit(time, split=":"), "[", 1)
time.of.day <- sapply(strsplit(date, split=" "), "[", 3)
date <- sapply(strsplit(date, split=" "), "[", 1)
year <- sapply(strsplit(date, split="/"), "[", 3)
collision.data <- mutate(collision.data, "Latitude" = lat, "Longitude" = lng, "YEAR" = year, "DATE" = date,
"TIME" = time, "HOUR" = hour, "TIME_OF_DAY" = time.of.day)
time.of.day <- collision.data$TIME_OF_DAY
hour <- as.numeric(collision.data$HOUR)
time <- data.frame(time.of.day, hour, stringsAsFactors = FALSE)
time <- within(time, hour[time.of.day == "PM"] <- hour[time.of.day == "PM"] + 12)
hour <- time$hour
minute <- sapply(strsplit(collision.data$TIME, split=":"), "[", 2)
time <- paste0(hour, ":", minute)
collision.data <- mutate(collision.data, "TIME" = time, "HOUR" = hour, "MINUTE" = minute) %>%
select(COLLISIONTYPE, FATALITIES, INATTENTIONIND, INJURIES, LIGHTCOND, LOCATION, PERSONCOUNT,
ROADCOND, SDOT_COLDESC, SEVERITYCODE, SEVERITYDESC, ST_COLDESC, UNDERINFL,
VEHCOUNT, WEATHER, Latitude, Longitude, DATE, YEAR, TIME, HOUR, MINUTE)
options(digits=16)
ballard.limits <- list(upper.lng = -122.360702, upper.lat = 47.690566, lower.lng = -122.410012, lower.lat = 47.655839)
collision.data <- na.omit(collision.data)
View(collision.data)
ballard.limits <- list(upper.lng = -122.360702, upper.lat = 47.690566, lower.lng = -122.410012, lower.lat = 47.655839)
phinney.ridge.limits <- list(upper.lng = -122.344423, upper.lat = 47.686954, lower.lng = -122.366053, lower.lat = 47.662190)
fremont.limits <- list(upper.lng = -122.342510, upper.lat = 47.665045, lower.lng = -122.367444, lower.lat = 47.648536)
greenwood.limits <- list(upper.lng = -122.344608, upper.lat = 47.705067, lower.lng = -122.365980, lower.lat = 47.683229)
university.district.limits <- list(upper.lng = -122.286484, upper.lat = 47.671793, lower.lng = -122.322104, lower.lat = 47.647687)
green.lake.limits <- list(upper.lng = -122.320072, upper.lat = 47.690502, lower.lng = -122.347323, lower.lat = 47.671085)
northgate.limits <- list(upper.lng = -122.305710, upper.lat = 47.734097, lower.lng = -122.344677, lower.lat = 47.683056)
magnolia.limits <- list(upper.lng = -122.393264, upper.lat = 47.661892, lower.lng = -122.409122, lower.lat = 47.648398)
queen.anne.limits <- list(upper.lng = -122.356687, upper.lat = 47.644524, lower.lng = -122.373650, lower.lat = 47.637816)
capitol.hill.limits <- list(upper.lng = -122.318215, upper.lat = 47.629830, lower.lng = -122.321305, lower.lat = 47.621153)
ballard.data <- collision.data %>%
filter(Longitude < ballard.limits$upper.lng & Longitude > ballard.limits$lower.lng) %>%
filter(Latitude < ballard.limits$upper.lat & Latitude > ballard.limits$lower.lat)
phinney.ridge.data <- collision.data %>%
filter(Longitude < phinney.ridge.limits$upper.lng & Longitude > phinney.ridge.limits$lower.lng) %>%
filter(Latitude < phinney.ridge.limits$upper.lat & Latitude > phinney.ridge.limits$lower.lat)
fremont.data <- collision.data %>%
filter(Longitude < fremont.limits$upper.lng & Longitude > fremont.limits$lower.lng) %>%
filter(Latitude < fremont.limits$upper.lat & Latitude > fremont.limits$lower.lat)
green.lake.data <- collision.data %>%
filter(Longitude < green.lake.limits$upper.lng & Longitude > green.lake.limits$lower.lng) %>%
filter(Latitude < green.lake.limits$upper.lat & Latitude > green.lake.limits$lower.lat)
university.district.data <- collision.data %>%
filter(Longitude < university.district.limits$upper.lng & Longitude > university.district.limits$lower.lng) %>%
filter(Latitude < university.district.limits$upper.lat & Latitude > university.district.limits$lower.lat)
greenwood.data <- collision.data %>%
filter(Longitude < greenwood.limits$upper.lng & Longitude > greenwood.limits$lower.lng) %>%
filter(Latitude < greenwood.limits$upper.lat & Latitude > greenwood.limits$lower.lat)
northgate.data <- collision.data %>%
filter(Longitude < northgate.limits$upper.lng & Longitude > northgate.limits$lower.lng) %>%
filter(Latitude < northgate.limits$upper.lat & Latitude > northgate.limits$lower.lat)
magnolia.data <- collision.data %>%
filter(Longitude < magnolia.limits$upper.lng & Longitude > magnolia.limits$lower.lng) %>%
filter(Latitude < magnolia.limits$upper.lat & Latitude > magnolia.limits$lower.lat)
queen.anne.data <- collision.data %>%
filter(Longitude < queen.anne.limits$upper.lng & Longitude > queen.anne.limits$lower.lng) %>%
filter(Latitude < queen.anne.limits$upper.lat & Latitude > queen.anne.limits$lower.lat)
capitol.hill.data <- collision.data %>%
filter(Longitude < capitol.hill.limits$upper.lng & Longitude > capitol.hill.limits$lower.lng) %>%
filter(Latitude < capitol.hill.limits$upper.lat & Latitude > capitol.hill.limits$lower.lat)
neighborhood.lng <- c(-122.385, -122.359722, -122.3499, -122.3553, -122.303333, -122.327778,
-122.328333, -122.400833, -122.356944, -122.316456)
neighborhood.lat <- c(47.677, 47.674167, 47.6505, 47.690612, 47.655, 47.680278, 47.708333,
47.650556, 47.637222, 47.622942)
neighborhood <- c("Ballard", "Phinney Ridge", "Fremont", "Greenwood", "University District", "Green Lake",
"Northgate", "Magnolia", "Queen Anne", "Capitol Hill")
count <- c(nrow(ballard.data)/5, nrow(phinney.ridge.data)/3, nrow(fremont.data)/3, nrow(greenwood.data)/3,
nrow(university.district.data)/4, nrow(green.lake.data)/3, nrow(northgate.data)/4, nrow(magnolia.data),
nrow(queen.anne.data), nrow(capitol.hill.data))
runApp()
runApp()
collision.data <- read.csv("./SDOT_Collisions.csv", stringsAsFactors = FALSE)
collision.data[collision.data==""] <- NA
collision.data$INATTENTIONIND[is.na(collision.data$INATTENTIONIND)] <- "N"
coordinates <- collision.data$Shape
lat <- sapply(strsplit(coordinates, split=", "), "[", 1)
lng <- sapply(strsplit(coordinates, split=", "), "[", 2)
lat <- gsub("\\(", "", lat)
lng <- gsub(")", "", lng)
lat <- signif(as.numeric(lat), 8)
lng <- signif(as.numeric(lng), 8)
date <- collision.data$INCDTTM
time <- sapply(strsplit(date, split=" "), "[", 2)
hour <- sapply(strsplit(time, split=":"), "[", 1)
time.of.day <- sapply(strsplit(date, split=" "), "[", 3)
date <- sapply(strsplit(date, split=" "), "[", 1)
year <- sapply(strsplit(date, split="/"), "[", 3)
collision.data <- mutate(collision.data, "Latitude" = lat, "Longitude" = lng, "YEAR" = year, "DATE" = date,
"TIME" = time, "HOUR" = hour, "TIME_OF_DAY" = time.of.day) %>%
select(COLLISIONTYPE, FATALITIES, INATTENTIONIND, INJURIES, LIGHTCOND, LOCATION, PERSONCOUNT,
ROADCOND, SDOT_COLDESC, SEVERITYCODE, SEVERITYDESC, ST_COLDESC, UNDERINFL,
VEHCOUNT, WEATHER, Latitude, Longitude, DATE, YEAR, TIME, HOUR)
collision.data <- na.omit(collision.data)
time.of.day <- collision.data$TIME_OF_DAY
hour <- as.numeric(collision.data$HOUR)
time <- data.frame(time.of.day, hour, stringsAsFactors = FALSE)
time <- within(time, hour[time.of.day == "PM"] <- hour[time.of.day == "PM"] + 12)
hour <- time$hour
minute <- sapply(strsplit(collision.data$TIME, split=":"), "[", 2)
time <- paste0(hour, ":", minute)
collision.data <- mutate(collision.data, "TIME" = time, "HOUR" = hour, "MINUTE" = minute)
time.of.day <- collision.data$TIME_OF_DAY
hour <- as.numeric(collision.data$HOUR)
time <- data.frame(time.of.day, hour, stringsAsFactors = FALSE)
View(collision.data)
time.of.day <- sapply(strsplit(date, split=" "), "[", 3)
hour <- as.numeric(hour)
hour <- as.numeric(sapply(strsplit(time, split=":"), "[", 1))
time <- data.frame(time.of.day, hour, stringsAsFactors = FALSE)
time <- within(time, hour[time.of.day == "PM"] <- hour[time.of.day == "PM"] + 12)
collision.data <- mutate(collision.data, "Latitude" = lat, "Longitude" = lng, "YEAR" = year, "DATE" = date,
"TIME" = time, "HOUR" = hour, "TIME_OF_DAY" = time.of.day) %>%
select(COLLISIONTYPE, FATALITIES, INATTENTIONIND, INJURIES, LIGHTCOND, LOCATION, PERSONCOUNT,
ROADCOND, SDOT_COLDESC, SEVERITYCODE, SEVERITYDESC, ST_COLDESC, UNDERINFL,
VEHCOUNT, WEATHER, Latitude, Longitude, DATE, YEAR, TIME, HOUR, TIME_OF_DAY)
collision.data <- read.csv("./SDOT_Collisions.csv", stringsAsFactors = FALSE)
collision.data[collision.data==""] <- NA
collision.data$INATTENTIONIND[is.na(collision.data$INATTENTIONIND)] <- "N"
coordinates <- collision.data$Shape
lat <- sapply(strsplit(coordinates, split=", "), "[", 1)
lng <- sapply(strsplit(coordinates, split=", "), "[", 2)
lat <- gsub("\\(", "", lat)
lng <- gsub(")", "", lng)
lat <- signif(as.numeric(lat), 8)
lng <- signif(as.numeric(lng), 8)
date <- collision.data$INCDTTM
time <- sapply(strsplit(date, split=" "), "[", 2)
hour <- sapply(strsplit(time, split=":"), "[", 1)
time.of.day <- sapply(strsplit(date, split=" "), "[", 3)
date <- sapply(strsplit(date, split=" "), "[", 1)
year <- sapply(strsplit(date, split="/"), "[", 3)
collision.data <- mutate(collision.data, "Latitude" = lat, "Longitude" = lng, "YEAR" = year, "DATE" = date,
"TIME" = time, "HOUR" = hour, "TIME_OF_DAY" = time.of.day) %>%
select(COLLISIONTYPE, FATALITIES, INATTENTIONIND, INJURIES, LIGHTCOND, LOCATION, PERSONCOUNT,
ROADCOND, SDOT_COLDESC, SEVERITYCODE, SEVERITYDESC, ST_COLDESC, UNDERINFL,
VEHCOUNT, WEATHER, Latitude, Longitude, DATE, YEAR, TIME, HOUR, TIME_OF_DAY)
collision.data <- na.omit(collision.data)
hour <- as.numeric(collision.data$HOUR)
time.of.day <- (collision.data$TIME_OF_DAY)
time <- data.frame(time.of.day, hour, stringsAsFactors = FALSE)
time <- within(time, hour[time.of.day == "PM"] <- hour[time.of.day == "PM"] + 12)
hour <- time$hour
minute <- sapply(strsplit(collision.data$TIME, split=":"), "[", 2)
time <- paste0(hour, ":", minute)
collision.data <- mutate(collision.data, "TIME" = time, "HOUR" = hour, "MINUTE" = minute)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ballard.limits <- list(upper.lng = -122.360702, upper.lat = 47.690566, lower.lng = -122.410012, lower.lat = 47.655839)
collision.data <- read.csv("./SDOT_Collisions.csv", stringsAsFactors = FALSE)
collision.data[collision.data==""] <- NA
collision.data$INATTENTIONIND[is.na(collision.data$INATTENTIONIND)] <- "N"
coordinates <- collision.data$Shape
lat <- sapply(strsplit(coordinates, split=", "), "[", 1)
lng <- sapply(strsplit(coordinates, split=", "), "[", 2)
lat <- gsub("\\(", "", lat)
lng <- gsub(")", "", lng)
lat <- signif(as.numeric(lat), 8)
lng <- signif(as.numeric(lng), 8)
date <- collision.data$INCDTTM
time <- sapply(strsplit(date, split=" "), "[", 2)
hour <- sapply(strsplit(time, split=":"), "[", 1)
time.of.day <- sapply(strsplit(date, split=" "), "[", 3)
date <- sapply(strsplit(date, split=" "), "[", 1)
year <- as.numeric(sapply(strsplit(date, split="/"), "[", 3))
collision.data <- mutate(collision.data, "Latitude" = lat, "Longitude" = lng, "YEAR" = year, "DATE" = date,
"TIME" = time, "HOUR" = hour, "TIME_OF_DAY" = time.of.day) %>%
select(COLLISIONTYPE, FATALITIES, INATTENTIONIND, INJURIES, LIGHTCOND, LOCATION, PERSONCOUNT,
ROADCOND, SDOT_COLDESC, SEVERITYCODE, SEVERITYDESC, ST_COLDESC, UNDERINFL,
VEHCOUNT, WEATHER, Latitude, Longitude, DATE, YEAR, TIME, HOUR, TIME_OF_DAY)
collision.data <- na.omit(collision.data)
hour <- as.numeric(collision.data$HOUR)
time.of.day <- (collision.data$TIME_OF_DAY)
time <- data.frame(time.of.day, hour, stringsAsFactors = FALSE)
time <- within(time, hour[time.of.day == "PM"] <- hour[time.of.day == "PM"] + 12)
hour <- time$hour
minute <- sapply(strsplit(collision.data$TIME, split=":"), "[", 2)
time <- paste0(hour, ":", minute)
collision.data <- mutate(collision.data, "TIME" = time, "HOUR" = hour, "MINUTE" = minute) %>%
filter(YEAR > 2011)
options(digits=16)
ballard.limits <- list(upper.lng = -122.360702, upper.lat = 47.690566, lower.lng = -122.410012, lower.lat = 47.655839)
phinney.ridge.limits <- list(upper.lng = -122.344423, upper.lat = 47.686954, lower.lng = -122.366053, lower.lat = 47.662190)
fremont.limits <- list(upper.lng = -122.342510, upper.lat = 47.665045, lower.lng = -122.367444, lower.lat = 47.648536)
greenwood.limits <- list(upper.lng = -122.344608, upper.lat = 47.705067, lower.lng = -122.365980, lower.lat = 47.683229)
university.district.limits <- list(upper.lng = -122.286484, upper.lat = 47.671793, lower.lng = -122.322104, lower.lat = 47.647687)
green.lake.limits <- list(upper.lng = -122.320072, upper.lat = 47.690502, lower.lng = -122.347323, lower.lat = 47.671085)
northgate.limits <- list(upper.lng = -122.305710, upper.lat = 47.734097, lower.lng = -122.344677, lower.lat = 47.683056)
magnolia.limits <- list(upper.lng = -122.393264, upper.lat = 47.661892, lower.lng = -122.409122, lower.lat = 47.648398)
queen.anne.limits <- list(upper.lng = -122.356687, upper.lat = 47.644524, lower.lng = -122.373650, lower.lat = 47.637816)
capitol.hill.limits <- list(upper.lng = -122.318215, upper.lat = 47.629830, lower.lng = -122.321305, lower.lat = 47.621153)
ballard.data <- collision.data %>%
filter(Longitude < ballard.limits$upper.lng & Longitude > ballard.limits$lower.lng) %>%
filter(Latitude < ballard.limits$upper.lat & Latitude > ballard.limits$lower.lat)
phinney.ridge.data <- collision.data %>%
filter(Longitude < phinney.ridge.limits$upper.lng & Longitude > phinney.ridge.limits$lower.lng) %>%
filter(Latitude < phinney.ridge.limits$upper.lat & Latitude > phinney.ridge.limits$lower.lat)
fremont.data <- collision.data %>%
filter(Longitude < fremont.limits$upper.lng & Longitude > fremont.limits$lower.lng) %>%
filter(Latitude < fremont.limits$upper.lat & Latitude > fremont.limits$lower.lat)
greenwood.data <- collision.data %>%
filter(Longitude < greenwood.limits$upper.lng & Longitude > greenwood.limits$lower.lng) %>%
filter(Latitude < greenwood.limits$upper.lat & Latitude > greenwood.limits$lower.lat)
university.district.data <- collision.data %>%
filter(Longitude < university.district.limits$upper.lng & Longitude > university.district.limits$lower.lng) %>%
filter(Latitude < university.district.limits$upper.lat & Latitude > university.district.limits$lower.lat)
green.lake.data <- collision.data %>%
filter(Longitude < green.lake.limits$upper.lng & Longitude > green.lake.limits$lower.lng) %>%
filter(Latitude < green.lake.limits$upper.lat & Latitude > green.lake.limits$lower.lat)
northgate.data <- collision.data %>%
filter(Longitude < northgate.limits$upper.lng & Longitude > northgate.limits$lower.lng) %>%
filter(Latitude < northgate.limits$upper.lat & Latitude > northgate.limits$lower.lat)
magnolia.data <- collision.data %>%
filter(Longitude < magnolia.limits$upper.lng & Longitude > magnolia.limits$lower.lng) %>%
filter(Latitude < magnolia.limits$upper.lat & Latitude > magnolia.limits$lower.lat)
queen.anne.data <- collision.data %>%
filter(Longitude < queen.anne.limits$upper.lng & Longitude > queen.anne.limits$lower.lng) %>%
filter(Latitude < queen.anne.limits$upper.lat & Latitude > queen.anne.limits$lower.lat)
capitol.hill.data <- collision.data %>%
filter(Longitude < capitol.hill.limits$upper.lng & Longitude > capitol.hill.limits$lower.lng) %>%
filter(Latitude < capitol.hill.limits$upper.lat & Latitude > capitol.hill.limits$lower.lat)
neighborhood.lng <- c(-122.385, -122.359722, -122.3499, -122.3553, -122.303333, -122.327778,
-122.328333, -122.400833, -122.356944, -122.316456)
neighborhood.lat <- c(47.677, 47.674167, 47.6505, 47.690612, 47.655, 47.680278, 47.708333,
47.650556, 47.637222, 47.622942)
neighborhood <- c("Ballard", "Phinney Ridge", "Fremont", "Greenwood", "University District", "Green Lake",
"Northgate", "Magnolia", "Queen Anne", "Capitol Hill")
count <- c(nrow(ballard.data)/5, nrow(phinney.ridge.data)/3, nrow(fremont.data)/3, nrow(greenwood.data)/3,
nrow(university.district.data)/4, nrow(green.lake.data)/3, nrow(northgate.data)/4, nrow(magnolia.data),
nrow(queen.anne.data), nrow(capitol.hill.data))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shinyUI(
navbarPage("Seattle Collisions in the Last 10 Years", id = "nav",
tabPanel("Map",
leafletOutput("map"),
checkboxGroupInput("inattention", "Inattentive Driving", c("Yes" = "yes", "No" = "no"), c("yes", "no")),
checkboxInput("year", "Sort By Year", FALSE),
conditionalPanel(
condition = "input.year",
sliderInput("year.slider",
"Years",
2007,
2010,
2007:2017
)
)
),
tabPanel("Chart")
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
