sepal.data <- data.frame(Length = iris$Sepal.Length, Width = iris$Sepal.Width, Part = "Sepal", Species = as.character(iris$Species), stringsAsFactors = FALSE)
petal.data <- data.frame(Length = iris$Petal.Length, Width = iris$Petal.Width, Part = "Petal", Species = as.character(iris$Species), stringsAsFactors = FALSE)
filtered.iris <- iris %>% full_join(sepal.data, petal.data)
sepal.data <- data.frame(length = iris$Sepal.Length, width = iris$Sepal.Width, part = "Sepal", species = as.character(iris$Species), stringsAsFactors = FALSE)
petal.data <- data.frame(length = iris$Petal.Length, width = iris$Petal.Width, part = "Petal", species = as.character(iris$Species), stringsAsFactors = FALSE)
filtered.iris <- iris %>% full_join(sepal.data, petal.data)
typeof(sepal.data)
sepal.data <- as.data.frame(length = iris$Sepal.Length, width = iris$Sepal.Width, part = "Sepal", species = as.character(iris$Species), stringsAsFactors = FALSE)
typeof(iris)
is.data.frame(iris)
is.data.frame(sepal.data)
filtered.iris <- full_join(sepal.data, petal.data)
sepal.data <- data.frame(Length = iris$Sepal.Length, Width = iris$Sepal.Width, Part = "Sepal", Species = as.character(iris$Species), stringsAsFactors = FALSE)
petal.data <- data.frame(Length = iris$Petal.Length, Width = iris$Petal.Width, Part = "Petal", Species = as.character(iris$Species), stringsAsFactors = FALSE)
filtered.iris <- full_join(sepal.data, petal.data)
View(filtered.iris)
View(filtered.iris)
sepal.data <- data.frame(Length = iris$Sepal.Length, Width = iris$Sepal.Width, Species = as.character(iris$Species), Part = "Sepal")
petal.data <- data.frame(Length = iris$Petal.Length, Width = iris$Petal.Width, Species = as.character(iris$Species), Part = "Petal")
filtered.iris <- full_join(sepal.data, petal.data)
filtered.iris <- full_join(sepal.data, petal.data) %>%
mutate(Species = iris$Species)
data("iris")
sepal.data <- data.frame(Length = iris$Sepal.Length, Width = iris$Sepal.Width, Part = "Sepal")
petal.data <- data.frame(Length = iris$Petal.Length, Width = iris$Petal.Width, Part = "Petal")
filtered.iris <- full_join(sepal.data, petal.data) %>%
mutate(Species = iris$Species)
sepal.data <- data.frame(Length = iris$Sepal.Length, Width = iris$Sepal.Width, Part = "Sepal", Species = as.character(iris$Species))
petal.data <- data.frame(Length = iris$Petal.Length, Width = iris$Petal.Width, Part = "Petal", Species = as.character(iris$Species))
filtered.iris <- full_join(sepal.data, petal.data)
View(iris)
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
sepal.data <- data.frame(Length = iris$Sepal.Length, Width = iris$Sepal.Width, Part = "Sepal", Species = as.character(iris$Species))
petal.data <- data.frame(Length = iris$Petal.Length, Width = iris$Petal.Width, Part = "Petal", Species = as.character(iris$Species))
shinyServer(function(input, output) {
# reactive function that filters the iris data based on button selections
filter.iris.data <- reactive({
# filters the data based on the length/width range input for either sepals or petals
sepal.data <- sepal.data %>%
filter(Length > input$sepal.length[1] & Length < input$sepal.length[2]) %>%
filter(Width > input$sepal.width[1] & Width < input$sepal.width[2])
petal.data <- petal.data %>%
filter(Length > input$petal.length[1] & Length < input$petal.length[2]) %>%
filter(Width > input$petal.width[1] & Width < input$petal.width[2]) %>%
if(input$part == "sepal") {
return(filter(sepal.data, Species %in% input$species))
} else if (input$part == "petal"){
return(filter(petal.data, Species %in% input$species))
} else {
return(full_join(sepal.data, petal.data) %>% filter(filtered.iris, Species %in% input$species))
}
# filtered.iris <- filter(filtered.iris, Species %in% input$species) # filters data for selected species
})
# renders a table
output$table <- renderTable({
return(filter.iris.data())
})
# reactive values for x and y coordinates
dimensions <- reactiveValues(x = NULL, y = NULL)
# creates a plot with x and y values mapped to iris part length and width
# color is mapped to iris species
output$plot <- renderPlot({
filtered.iris <- filter.iris.data()
iris.plot <- ggplot(filtered.iris, mapping = aes(x = Length, y = Width, color = Species))
if(input$part == "both") {
iris.plot <- iris.plot + facet_by(Part)
}
iris.plot + geom_point(size = 5) +
coord_cartesian(xlim = dimensions$x, ylim = dimensions$y) # plot coordinates change based on reactive values
return(iris.plot)
})
# adds a double click listener
observeEvent(input$dblclick, {
brush <- input$brush
if (!is.null(brush)) { # if a brush exists, changes reactive x and y coordinate values to the box x and y values
dimensions$x <- c(brush$xmin, brush$xmax)
dimensions$y <- c(brush$ymin, brush$ymax)
} else { # otherwise it's back to the plot values
dimensions$x <- NULL
dimensions$y <- NULL
}
})
})
petal.data <- petal.data %>%
filter(Length > input$petal.length[1] & Length < input$petal.length[2]) %>%
filter(Width > input$petal.width[1] & Width < input$petal.width[2]) %>%
if(input$part == "sepal") {
return(filter(sepal.data, Species %in% input$species))
} else if (input$part == "petal"){
return(filter(petal.data, Species %in% input$species))
} else {
return(full_join(sepal.data, petal.data) %>% filter(filtered.iris, Species %in% input$species))
}
output$table <- renderTable({
return(filter.iris.data())
})
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
?coord_cartesian
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
library(rsconnect)
runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
shiny::runApp('Dropbox/Classes/INFO201/Assignments/a8-data-app-ktran29')
?updateSliderInput
shiny::runApp('Dropbox/Classes/INFO201/Project/final_project')
runApp('Dropbox/Classes/INFO201/Project/final_project')
runApp('Dropbox/Classes/INFO201/Project/final_project')
runApp('Dropbox/Classes/INFO201/Project/final_project')
runApp('Dropbox/Classes/INFO201/Project/final_project')
runApp('Dropbox/Classes/INFO201/Project/final_project')
View(northgate.data)
View(northgate.data)
View(capitol.hill.data)
View(fremont.data)
View(green.lake.data)
View(greenwood.data)
View(magnolia.data)
View(phinney.ridge.data)
View(queen.anne.data)
View(university.district.data)
?head
collision.data <- head(collision.data, n = 100)
collision.data <- read.csv("./SDOT_Collisions.csv", stringsAsFactors = FALSE)
collision.data[collision.data==""] <- NA
coordinates <- collision.data$Shape
lat <- sapply(strsplit(coordinates, split=", "), "[", 1)
lng <- sapply(strsplit(coordinates, split=", "), "[", 2)
lat <- gsub("\\(", "", lat)
lng <- gsub(")", "", lng)
collision.data <- mutate(collision.data, "Latitude" = as.numeric(lat), "Longitude" = as.numeric(lng)) %>%
select(ADDRTYPE, COLLISIONTYPE, DISTANCE, INATTENTIONIND, INCDTTM, INJURIES, JUNCTIONTYPE,
LIGHTCOND, LOCATION, PERSONCOUNT, ROADCOND, SDOT_COLDESC, SEVERITYDESC, ST_COLDESC,
VEHCOUNT, WEATHER, Latitude, Longitude)
collision.data$INATTENTIONIND[is.na(collision.data$INATTENTIONIND)] <- "N"
collision.data <- na.omit(collision.data)
collision.data <- head(collision.data, n = 100)
collision.data <- read.csv("./SDOT_Collisions.csv", stringsAsFactors = FALSE)
setwd("~/Dropbox/Classes/INFO201/Project/final_project")
collision.data <- read.csv("./SDOT_Collisions.csv", stringsAsFactors = FALSE)
collision.data[collision.data==""] <- NA
coordinates <- collision.data$Shape
lat <- sapply(strsplit(coordinates, split=", "), "[", 1)
lng <- sapply(strsplit(coordinates, split=", "), "[", 2)
lat <- gsub("\\(", "", lat)
lng <- gsub(")", "", lng)
collision.data <- mutate(collision.data, "Latitude" = as.numeric(lat), "Longitude" = as.numeric(lng)) %>%
select(ADDRTYPE, COLLISIONTYPE, DISTANCE, INATTENTIONIND, INCDTTM, INJURIES, JUNCTIONTYPE,
LIGHTCOND, LOCATION, PERSONCOUNT, ROADCOND, SDOT_COLDESC, SEVERITYDESC, ST_COLDESC,
VEHCOUNT, WEATHER, Latitude, Longitude)
collision.data$INATTENTIONIND[is.na(collision.data$INATTENTIONIND)] <- "N"
collision.data <- na.omit(collision.data)
collision.data <- head(collision.data, n = 100)
options(digits=22)
ballard.data <- collision.data %>%
filter(Longitude < ballard.limits$upper.lng & Longitude > ballard.limits$lower.lng) %>%
filter(Latitude < ballard.limits$upper.lat & Latitude > ballard.limits$lower.lat)
phinney.ridge.data <- collision.data %>%
filter(Longitude < phinney.ridge.limits$upper.lng & Longitude > phinney.ridge.limits$lower.lng) %>%
filter(Latitude < phinney.ridge.limits$upper.lat & Latitude > phinney.ridge.limits$lower.lat)
fremont.data <- collision.data %>%
filter(Longitude < fremont.limits$upper.lng & Longitude > fremont.limits$lower.lng) %>%
filter(Latitude < fremont.limits$upper.lat & Latitude > fremont.limits$lower.lat)
greenwood.data <- collision.data %>%
filter(Longitude < greenwood.limits$upper.lng & Longitude > greenwood.limits$lower.lng) %>%
filter(Latitude < greenwood.limits$upper.lat & Latitude > greenwood.limits$lower.lat)
university.district.data <- collision.data %>%
filter(Longitude < university.district.limits$upper.lng & Longitude > university.district.limits$lower.lng) %>%
filter(Latitude < university.district.limits$upper.lat & Latitude > university.district.limits$lower.lat)
green.lake.data <- collision.data %>%
filter(Longitude < green.lake.limits$upper.lng & Longitude > green.lake.limits$lower.lng) %>%
filter(Latitude < green.lake.limits$upper.lat & Latitude > green.lake.limits$lower.lat)
northgate.data <- collision.data %>%
filter(Longitude < northgate.limits$upper.lng & Longitude > northgate.limits$lower.lng) %>%
filter(Latitude < northgate.limits$upper.lat & Latitude > northgate.limits$lower.lat)
magnolia.data <- collision.data %>%
filter(Longitude < magnolia.limits$upper.lng & Longitude > magnolia.limits$lower.lng) %>%
filter(Latitude < magnolia.limits$upper.lat & Latitude > magnolia.limits$lower.lat)
queen.anne.data <- collision.data %>%
filter(Longitude < queen.anne.limits$upper.lng & Longitude > queen.anne.limits$lower.lng) %>%
filter(Latitude < queen.anne.limits$upper.lat & Latitude > queen.anne.limits$lower.lat)
capitol.hill.data <- collision.data %>%
filter(Longitude < capitol.hill.limits$upper.lng & Longitude > capitol.hill.limits$lower.lng) %>%
filter(Latitude < capitol.hill.limits$upper.lat & Latitude > capitol.hill.limits$lower.lat)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(leaflet)
library(dplyr)
#setwd("~/Dropbox/Classes/INFO201/Project/final_project")
source('./data.R')
shinyServer(function(input, output)  {
ballard.data <- collision.data %>%
filter(Longitude < ballard.limits$upper.lng & Longitude > ballard.limits$lower.lng) %>%
filter(Latitude < ballard.limits$upper.lat & Latitude > ballard.limits$lower.lat)
phinney.ridge.data <- collision.data %>%
filter(Longitude < phinney.ridge.limits$upper.lng & Longitude > phinney.ridge.limits$lower.lng) %>%
filter(Latitude < phinney.ridge.limits$upper.lat & Latitude > phinney.ridge.limits$lower.lat)
fremont.data <- collision.data %>%
filter(Longitude < fremont.limits$upper.lng & Longitude > fremont.limits$lower.lng) %>%
filter(Latitude < fremont.limits$upper.lat & Latitude > fremont.limits$lower.lat)
greenwood.data <- collision.data %>%
filter(Longitude < greenwood.limits$upper.lng & Longitude > greenwood.limits$lower.lng) %>%
filter(Latitude < greenwood.limits$upper.lat & Latitude > greenwood.limits$lower.lat)
university.district.data <- collision.data %>%
filter(Longitude < university.district.limits$upper.lng & Longitude > university.district.limits$lower.lng) %>%
filter(Latitude < university.district.limits$upper.lat & Latitude > university.district.limits$lower.lat)
green.lake.data <- collision.data %>%
filter(Longitude < green.lake.limits$upper.lng & Longitude > green.lake.limits$lower.lng) %>%
filter(Latitude < green.lake.limits$upper.lat & Latitude > green.lake.limits$lower.lat)
northgate.data <- collision.data %>%
filter(Longitude < northgate.limits$upper.lng & Longitude > northgate.limits$lower.lng) %>%
filter(Latitude < northgate.limits$upper.lat & Latitude > northgate.limits$lower.lat)
magnolia.data <- collision.data %>%
filter(Longitude < magnolia.limits$upper.lng & Longitude > magnolia.limits$lower.lng) %>%
filter(Latitude < magnolia.limits$upper.lat & Latitude > magnolia.limits$lower.lat)
queen.anne.data <- collision.data %>%
filter(Longitude < queen.anne.limits$upper.lng & Longitude > queen.anne.limits$lower.lng) %>%
filter(Latitude < queen.anne.limits$upper.lat & Latitude > queen.anne.limits$lower.lat)
capitol.hill.data <- collision.data %>%
filter(Longitude < capitol.hill.limits$upper.lng & Longitude > capitol.hill.limits$lower.lng) %>%
filter(Latitude < capitol.hill.limits$upper.lat & Latitude > capitol.hill.limits$lower.lat)
neighborhood.lng <- c(-122.385, -122.359722, -122.3499, -122.3553, -122.303333, -122.327778,
-122.328333, -122.400833, -122.356944, -122.316456)
neighborhood.lat <- c(47.677, 47.674167, 47.6505, 47.690612, 47.655, 47.680278, 47.708333,
47.650556, 47.637222, 47.622942)
neighborhood <- c("Ballard", "Phinney Ridge", "Fremont", "Greenwood", "University District", "Green Lake",
"Northgate", "Magnolia", "Queen Anne", "Capitol Hill")
count <- c(nrow(ballard.data)*500, nrow(phinney.ridge.data)*300, nrow(fremont.data)*300, nrow(greenwood.data)*300,
nrow(university.district.data)*400, nrow(green.lake.data)*300, nrow(northgate.data)*400, nrow(magnolia.data),
nrow(queen.anne.data), nrow(capitol.hill.data))
neighborhood.coordinates <- data.frame(neighborhood.lng, neighborhood.lat, neighborhood, count)
output$map <- renderLeaflet({
map <- leaflet(neighborhood.coordinates) %>%
addTiles() %>%
addCircles(~neighborhood.lng, ~neighborhood.lat, ~count, ~neighborhood, "Overview", FALSE, fillOpacity = 0.6) %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "Ballard", data = ballard.data) %>%
hideGroup("Ballard") %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "Phinney Ridge", data = phinney.ridge.data) %>%
hideGroup("Phinney Ridge") %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "Fremont", data = fremont.data) %>%
hideGroup("Fremont") %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "Greenwood", data = greenwood.data) %>%
hideGroup("Greenwood") %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "University District", data = university.district.data) %>%
hideGroup("University District") %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "Green Lake", data = green.lake.data) %>%
hideGroup("Green Lake") %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "Northgate", data = northgate.data) %>%
hideGroup("Northgate") %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "Magnolia", data = magnolia.data) %>%
hideGroup("Magnolia") %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "Queen Anne", data = queen.anne.data) %>%
hideGroup("Queen Anne") %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "Capitol Hill", data = capitol.hill.data) %>%
hideGroup("Capitol Hill") %>%
setView(-122.339220, 47.677622, 12)
current.group <- "Overview"
if(!is.null(clicks$map.click) & is.null(clicks$shape.click)) {
map <- map %>% hideGroup(current.group) %>% showGroup("Overview") %>%
setView(-122.339220, 47.677622, 12)
} else if(!is.null(clicks$shape.click) & is.null(clicks$map.click)) {
current.group <- clicks$shape.click$id
map <- map %>% hideGroup("Overview") %>% showGroup(current.group) %>%
setView(lat = clicks$shape.click$lat, lng = clicks$shape.click$lng, zoom = 14)
}
return(map)
})
clicks <- reactiveValues(map.click = NULL, shape.click = NULL)
observeEvent(input$map_shape_click, {
clicks$shape.click <- input$map_shape_click
clicks$map.click <- NULL
})
observeEvent(input$map_click, {
clicks$map.click <- input$map_click
clicks$shape.click <- NULL
})
showCollisionInfo <- function(collision, lat, lng) {
selectedCollision <- filter(collision.data, Latitude == lat, Longitude == lng)
print(selectedCollision)
content <- as.character(tagList(
tags$h4("Collision Type:", selectedCollision$COLLISIONTYPE),
tags$strong("Location:", selectedCollision$LOCATION), tags$br(),
sprintf("SDOT Description: %s", selectedCollision$SDOT_COLDESC), tags$br(),
sprintf("Number of Injuries: %s", selectedCollision$INJURIES), tags$br(),
sprintf("Distance: %s", selectedCollision$DISTANCE)
))
leafletProxy("map") %>% addPopups(lng, lat, content)
}
observe({
leafletProxy("map") %>% clearPopups()
click <- input$map_marker_click
print(click)
if (is.null(click)) {
return()
}
isolate({
showCollisionInfo(click$id, click$lat, click$lng)
})
})
})
ballard.data <- collision.data %>%
filter(Longitude < ballard.limits$upper.lng & Longitude > ballard.limits$lower.lng) %>%
filter(Latitude < ballard.limits$upper.lat & Latitude > ballard.limits$lower.lat)
phinney.ridge.data <- collision.data %>%
filter(Longitude < phinney.ridge.limits$upper.lng & Longitude > phinney.ridge.limits$lower.lng) %>%
filter(Latitude < phinney.ridge.limits$upper.lat & Latitude > phinney.ridge.limits$lower.lat)
fremont.data <- collision.data %>%
filter(Longitude < fremont.limits$upper.lng & Longitude > fremont.limits$lower.lng) %>%
filter(Latitude < fremont.limits$upper.lat & Latitude > fremont.limits$lower.lat)
greenwood.data <- collision.data %>%
filter(Longitude < greenwood.limits$upper.lng & Longitude > greenwood.limits$lower.lng) %>%
filter(Latitude < greenwood.limits$upper.lat & Latitude > greenwood.limits$lower.lat)
university.district.data <- collision.data %>%
filter(Longitude < university.district.limits$upper.lng & Longitude > university.district.limits$lower.lng) %>%
filter(Latitude < university.district.limits$upper.lat & Latitude > university.district.limits$lower.lat)
green.lake.data <- collision.data %>%
filter(Longitude < green.lake.limits$upper.lng & Longitude > green.lake.limits$lower.lng) %>%
filter(Latitude < green.lake.limits$upper.lat & Latitude > green.lake.limits$lower.lat)
northgate.data <- collision.data %>%
filter(Longitude < northgate.limits$upper.lng & Longitude > northgate.limits$lower.lng) %>%
filter(Latitude < northgate.limits$upper.lat & Latitude > northgate.limits$lower.lat)
magnolia.data <- collision.data %>%
filter(Longitude < magnolia.limits$upper.lng & Longitude > magnolia.limits$lower.lng) %>%
filter(Latitude < magnolia.limits$upper.lat & Latitude > magnolia.limits$lower.lat)
queen.anne.data <- collision.data %>%
filter(Longitude < queen.anne.limits$upper.lng & Longitude > queen.anne.limits$lower.lng) %>%
filter(Latitude < queen.anne.limits$upper.lat & Latitude > queen.anne.limits$lower.lat)
capitol.hill.data <- collision.data %>%
filter(Longitude < capitol.hill.limits$upper.lng & Longitude > capitol.hill.limits$lower.lng) %>%
filter(Latitude < capitol.hill.limits$upper.lat & Latitude > capitol.hill.limits$lower.lat)
neighborhood.lng <- c(-122.385, -122.359722, -122.3499, -122.3553, -122.303333, -122.327778,
-122.328333, -122.400833, -122.356944, -122.316456)
neighborhood.lat <- c(47.677, 47.674167, 47.6505, 47.690612, 47.655, 47.680278, 47.708333,
47.650556, 47.637222, 47.622942)
neighborhood <- c("Ballard", "Phinney Ridge", "Fremont", "Greenwood", "University District", "Green Lake",
"Northgate", "Magnolia", "Queen Anne", "Capitol Hill")
count <- c(nrow(ballard.data)*500, nrow(phinney.ridge.data)*300, nrow(fremont.data)*300, nrow(greenwood.data)*300,
nrow(university.district.data)*400, nrow(green.lake.data)*300, nrow(northgate.data)*400, nrow(magnolia.data),
nrow(queen.anne.data), nrow(capitol.hill.data))
neighborhood.coordinates <- data.frame(neighborhood.lng, neighborhood.lat, neighborhood, count)
output$map <- renderLeaflet({
map <- leaflet(neighborhood.coordinates) %>%
addTiles() %>%
addCircles(~neighborhood.lng, ~neighborhood.lat, ~count, ~neighborhood, "Overview", FALSE, fillOpacity = 0.6) %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "Ballard", data = ballard.data) %>%
hideGroup("Ballard") %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "Phinney Ridge", data = phinney.ridge.data) %>%
hideGroup("Phinney Ridge") %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "Fremont", data = fremont.data) %>%
hideGroup("Fremont") %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "Greenwood", data = greenwood.data) %>%
hideGroup("Greenwood") %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "University District", data = university.district.data) %>%
hideGroup("University District") %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "Green Lake", data = green.lake.data) %>%
hideGroup("Green Lake") %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "Northgate", data = northgate.data) %>%
hideGroup("Northgate") %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "Magnolia", data = magnolia.data) %>%
hideGroup("Magnolia") %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "Queen Anne", data = queen.anne.data) %>%
hideGroup("Queen Anne") %>%
addCircleMarkers(~Longitude, ~Latitude, 2, group = "Capitol Hill", data = capitol.hill.data) %>%
hideGroup("Capitol Hill") %>%
setView(-122.339220, 47.677622, 12)
current.group <- "Overview"
runApp()
runApp()
runApp()
runApp()
runApp()
?tagList
?sprintf
?tags
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
collision.data <- read.csv("./SDOT_Collisions.csv", stringsAsFactors = FALSE)
collision.data[collision.data==""] <- NA
View(collision.data)
year <- sapply(strsplit(date, split=" "), "[", 1)
year <- sapply(strsplit(date, split="\w"), "[", 1)
year <- sapply(strsplit(date, split=" "), "[", 1)
date <- collision.data$INCDATE
year <- sapply(strsplit(date, split=" "), "[", 1)
year <- sapply(strsplit(year, split="\"), "[", 3)
collision.data <- mutate(collision.data, "Latitude" = lat, "Longitude" = lng) %>%
select(ADDRTYPE, COLLISIONTYPE, DISTANCE, INATTENTIONIND, INCDTTM, INJURIES, JUNCTIONTYPE,
LIGHTCOND, LOCATION, PERSONCOUNT, ROADCOND, SDOT_COLDESC, SEVERITYDESC, ST_COLDESC,
VEHCOUNT, WEATHER, Latitude, Longitude)
collision.data$INATTENTIONIND[is.na(collision.data$INATTENTIONIND)] <- "N"
collision.data <- na.omit(collision.data)
options(digits=16)
ballard.limits <- list(upper.lng = -122.360702, upper.lat = 47.690566, lower.lng = -122.410012, lower.lat = 47.655839)
phinney.ridge.limits <- list(upper.lng = -122.344423, upper.lat = 47.686954, lower.lng = -122.366053, lower.lat = 47.662190)
fremont.limits <- list(upper.lng = -122.342510, upper.lat = 47.665045, lower.lng = -122.367444, lower.lat = 47.648536)
greenwood.limits <- list(upper.lng = -122.344608, upper.lat = 47.705067, lower.lng = -122.365980, lower.lat = 47.683229)
university.district.limits <- list(upper.lng = -122.286484, upper.lat = 47.671793, lower.lng = -122.322104, lower.lat = 47.647687)
green.lake.limits <- list(upper.lng = -122.320072, upper.lat = 47.690502, lower.lng = -122.347323, lower.lat = 47.671085)
northgate.limits <- list(upper.lng = -122.305710, upper.lat = 47.734097, lower.lng = -122.344677, lower.lat = 47.683056)
magnolia.limits <- list(upper.lng = -122.393264, upper.lat = 47.661892, lower.lng = -122.409122, lower.lat = 47.648398)
queen.anne.limits <- list(upper.lng = -122.356687, upper.lat = 47.644524, lower.lng = -122.373650, lower.lat = 47.637816)
capitol.hill.limits <- list(upper.lng = -122.318215, upper.lat = 47.629830, lower.lng = -122.321305, lower.lat = 47.621153)
year <- sapply(strsplit(year, split="\\"), "[", 3)
year <- sapply(strsplit(year, split="/"), "[", 3)
library(dplyr)
#setwd("~/Dropbox/Classes/INFO201/Project/final_project")
collision.data <- read.csv("./SDOT_Collisions.csv", stringsAsFactors = FALSE)
collision.data[collision.data==""] <- NA
coordinates <- collision.data$Shape
date <- collision.data$INCDATE
lat <- sapply(strsplit(coordinates, split=", "), "[", 1)
lng <- sapply(strsplit(coordinates, split=", "), "[", 2)
lat <- gsub("\\(", "", lat)
lng <- gsub(")", "", lng)
lat <- signif(as.numeric(lat), 8)
lng <- signif(as.numeric(lng), 8)
date <- sapply(strsplit(date, split=" "), "[", 1)
year <- sapply(strsplit(date, split="/"), "[", 3)
collision.data <- mutate(collision.data, "Latitude" = lat, "Longitude" = lng, "Year" = year, "Date" = date) %>%
select(ADDRTYPE, COLLISIONTYPE, DISTANCE, INATTENTIONIND, INCDTTM, INJURIES, JUNCTIONTYPE,
LIGHTCOND, LOCATION, PERSONCOUNT, ROADCOND, SDOT_COLDESC, SEVERITYDESC, ST_COLDESC,
VEHCOUNT, WEATHER, Latitude, Longitude, Year, Date)
collision.data$INATTENTIONIND[is.na(collision.data$INATTENTIONIND)] <- "N"
collision.data <- na.omit(collision.data)
options(digits=16)
ballard.limits <- list(upper.lng = -122.360702, upper.lat = 47.690566, lower.lng = -122.410012, lower.lat = 47.655839)
phinney.ridge.limits <- list(upper.lng = -122.344423, upper.lat = 47.686954, lower.lng = -122.366053, lower.lat = 47.662190)
fremont.limits <- list(upper.lng = -122.342510, upper.lat = 47.665045, lower.lng = -122.367444, lower.lat = 47.648536)
greenwood.limits <- list(upper.lng = -122.344608, upper.lat = 47.705067, lower.lng = -122.365980, lower.lat = 47.683229)
university.district.limits <- list(upper.lng = -122.286484, upper.lat = 47.671793, lower.lng = -122.322104, lower.lat = 47.647687)
green.lake.limits <- list(upper.lng = -122.320072, upper.lat = 47.690502, lower.lng = -122.347323, lower.lat = 47.671085)
northgate.limits <- list(upper.lng = -122.305710, upper.lat = 47.734097, lower.lng = -122.344677, lower.lat = 47.683056)
magnolia.limits <- list(upper.lng = -122.393264, upper.lat = 47.661892, lower.lng = -122.409122, lower.lat = 47.648398)
queen.anne.limits <- list(upper.lng = -122.356687, upper.lat = 47.644524, lower.lng = -122.373650, lower.lat = 47.637816)
capitol.hill.limits <- list(upper.lng = -122.318215, upper.lat = 47.629830, lower.lng = -122.321305, lower.lat = 47.621153)
View(collision.data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
neighborhood.data <- data.frame(ballard.data, phinney.ridge.data, fremont.data, greenwood.data, university.district.data,
green.lake.data, northgate.data, magnolia.data, queen.anne.data, capitol.hill.data)
neighborhood.data <- list(ballard.data, phinney.ridge.data, fremont.data, greenwood.data, university.district.data,
green.lake.data, northgate.data, magnolia.data, queen.anne.data, capitol.hill.data)
as.data.frame(neighborhood.data)
neighborhood.data
runApp()
neighborhood.data[1]
runApp()
as.data.frame(neighborhood.data)
neighborhood.data <- data.frame()
neighborhood.data <- neighborhood.data %>%
mutate("ballard" = ballard.data, "phinney ridge" = phinney.ridge.data, "fremont" = fremont.data,
"greenwood" = greenwood.data, "university district" = university.district.data,
"green lake" = green.lake.data, "northgate" = northgate.data, "magnolia" = magnolia.data,
"queen anne" = queen.anne.data, "capitol hill" = capitol.hill.data)
neighborhood.data <- data.frame()
neighborhood.data <- neighborhood.data %>%
mutate("ballard" = ballard.data, "phinney ridge" = phinney.ridge.data)
neighborhood.data <- neighborhood.data %>%
mutate("ballard" = ballard.data)
neighborhood.data <- data.frame()
neighborhood.data <- neighborhood.data %>%
mutate("ballard" = ballard.data)
runApp()
runApp()
